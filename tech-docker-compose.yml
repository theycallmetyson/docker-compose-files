services:
  
  grafana:
    image: grafana/grafana-enterprise:latest
    hostname: grafana
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=https://grafana.tcmt.se/
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    networks:
      - tech_network
    ports:
      - '10002:3000'
    volumes:
      - grafana_data:/var/lib/grafana

  jenkins:
    image: jenkins/jenkins:lts
    hostname: jenkins
    container_name: jenkins
    restart: unless-stopped
    user: root
    networks:
      - tech_network
    ports:
      - '10003:8080'
    volumes:
      - jenkins_data:/var/jenkins_home

  sonarqube:
    image: sonarqube:lts-community
    hostname: sonarqube
    container_name: sonarqube
    read_only: true
    depends_on:
      db:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube
    networks:
      - tech_network
    ports:
      - '10004:9000'
  db:
    image: postgres:alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    hostname: postgresql
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql_data:/var/lib/postgresql
    networks:
      - tech_network

volumes:
  grafana_data:
    name: grafana_data
  jenkins_data:
    name: jenkins_data
  sonarqube_data:
    name: sonarqube_data
  postgresql_data:
    name: postgresql_data

networks:
  tech_network:
    name: tech_network